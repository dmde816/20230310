// 우리가 제일 많이 사용할 구문
// 개발자는 객체를 잘 사용하면 돼요

// if문 :비교문
// 코드를 읽어 가다가 if문을 만나면 거기에 true나 false에 보고 실행
if(false){
// 여기 있는 구문은
// if() 괄호 안에 true냐 false의 차이로 실행을 시킨다.
    console
    // false일 떄 이걸 쓰면 색깔이 저렇게 바뀜
}
if(true){
    console
    // ture일 떄는 실행 된다고 생각하고 빛나게 표현

}
// 내용을 실핼 시키고 싶을 때도 있고, 실행 시키고 싶지 않을 때도 있는데,
// 연산자를 괄호에다가 넣어주면 값을 비교하면서 맞으면 실행,
// 아니면 실행 안 되게 할 수 있겠구나!

let age = 1;
let age2 = 10;

// age 나야
// age보다 age2가 값이 크니까 true라서 if 조건에 맞아
// 그래서 내용을 표출시킨 것
// if(age < age2){
//     // 이 내용이 true이면 작성을 시키고
//     // 아니면 작성이 되지 않는다.
//     console.log("내 나이가 작구나")
// }

// flase 면 실행 시키고 싶은데.. 

if(age < age2){
    // 이 내용이 true이면 작성을 시키고
    // 아니면 작성이 되지 않는다.
    console.log("내 나이가 작구나")
} else{
    // if가 아닐 때 (false일 떄) else문 실행됨.
    console.log("나는 else문")
}

// 참과 거짓 말고 아닐 때 조건 중에 다른 걸 더 줄 순 없나? 비교를 더 하고 싶은데



// if(age < age2){
//     //  age3 보다 age4가 더 커야지 true 여기선 5,5같은 값이니까 flase
//     // if문이 맞으면 이 코드 실행
// }else if(){
//     // if문이 틀리면 여기로 와서 조건을 확인하고 맞으면 실행 시키고 끝.
//     // 틀리면 또 내려가서
// }else{
//     // else if문의 조건이 맞지 않으면 else 실행
// }

// if(){
//     // if문이 맞으면 이 코드 실행
// }else if(){
//     // if문이 틀리면 여기로 와서 조건을 확인하고 맞으면 실행 시키고 끝.
//     // 틀리면 또 내려가서
// }else if(){
//     // if문이 틀리면 여기로 와서 조건을 확인하고 맞으면 실행 시키고 끝.
//     // 틀리면 또 내려가서
// }else if(){
//     // if문이 틀리면 여기로 와서 조건을 확인하고 맞으면 실행 시키고 끝.
//     // 틀리면 또 내려가서
// }else if(){
//     // if문이 틀리면 여기로 와서 조건을 확인하고 맞으면 실행 시키고 끝.
//     // 틀리면 또 내려가서
// }
// else{
//     // else if문의 조건이 맞지 않으면 else 실행
// }
// // 조건을 여러개 주고 맞는 지 틀린 지 계속 확인 가능

let age3 = 5;
let age4 = 5;

if(age3 < age4){
    //  age3 보다 age4가 더 커야지 true 여기선 5,5같은 값이니까 flase
    console.log()
  
}else if(age3 == age4){
    console.log("나는 else if문")
}else{
    console.log("나는 두번째 else 문")
}

// 반복문 for문
// 여러번 반복 실행해야 할 구문이 있을 때 사용한다.
// 반복문 중에 하나이고

// let b = 5;
// for(let a = 1;a < b; a++){
//     // 변수 선언하고(let a = 1)
//     // 비교하고(a < b)
//     // 값을 확인하고
//     // for문 안에 있는 구문을 실행하고 나서
//     // 값을 증가시킴 (a++)
//     // 증가 시킨 다음에 다시 비교 (a < b)
//     // true면 구문 다시 실행
//     // 다시 실행 후에 증가 시키고 비교문 확인
//     // 계속 증가되다가 false로 안 맞으면 그때 반복문 종료
//     // 그래서 숫자가 여러줄 나오는 것.
//     // 무한으로 반복되는 구문이 들어가면 사이트가 터진다. 이러면 안 된다.(조건식을 잘 확인해야함)
//     console.log(a);
// }


// 반복문 가지고 구구단 만들기
// 

let d = 10;
for(let c = 1; c < d; c++){
    console.log(c*2);
}
